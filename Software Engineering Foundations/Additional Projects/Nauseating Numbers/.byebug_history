exit
display count
n
display count_facs
n
display count
n
display count
n
display count_facs
n
display count
n
display count
display count_facs
n
display count
n
display count_facs
n
display count_facs
display all_factors(pf_sort(pf(count)).keys,pf_sort(pf(count)).values).length
display all_factors(pf_sort(pf(count)).keys,pf_sort(pf(count)).values)
display pf_sort(pf(count)).values
display pf_sort(pf(count)).keys
display pf_sort(pf(count))
display pf(count)
display count
display counf_facs
n
watch count
display count
n
exit
display all_factors([1],[1])
display count_facs
n
display count
n
display count
n
display count_facs
n
exit
s
display all_factors([23],[1])
display pf_sort(pf(count))
display pf(count)
display pf(count))
display is_prime?(count)
display count
exit
display currentResult
display currentDivisor
display i
s
display i
display currentResult
s
currentResult = 7
currentResult = 49
display currentResult * primeDivisors[currentDivisor]
s
display currentResult
s
display currentDivisor + 1
display currentResult
s
exit
display currentResult
s
display primeDivisors[currentDivisor]
display currentResult
s
display currentResult
s
display currentDivisor
s
display currentResult
s
exit
display currentResult
display multiplicity[currentDivisor]
display multiplicity[currentDivisors]
s
display currentResult
s
display currentResult
s
display currentDivisor
s
exit
display currentResult
s
display currentResult
s
display currentResult
s
display currentResult
s
exit
s
display currentResult
s
display i
display currentDivisor + 1
s
display primeDivisors[currentDivisor]
display currentResult
s
display primeDivisors[currentDivisor]
display currentResult
s
display currentResult
s
display currentDivisor + 1
display currentResult
s
display primeDivisors[currentDivisor]
display currentResult
s
display currentResult
s
display currentResult
display currentDivisor
s
display currentResult
display currentDivisor
s
display currentDivisor,currentResult
s
display currentResult
display multiplicity[currentDivisor]
s
display currentResult
display currentDivisor
s
display currentDivisor + 1
s
exit
n
display multiplicity[currentDivisor]
s
display currentDivisor
s
